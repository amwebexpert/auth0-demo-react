{"version":3,"sources":["components/LoginButton.js","components/LogoutButton.js","components/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["LoginButton","loginWithRedirect","useAuth0","className","onClick","LogoutButton","logout","returnTo","window","location","href","Profile","user","isAuthenticated","isLoading","getAccessTokenSilently","React","useState","userMetadata","setUserMetadata","useEffect","a","domain","audience","scope","accessToken","ReactNativeWebView","postMessage","console","log","userDetailsByIdUrl","sub","fetch","headers","Authorization","metadataResponse","json","user_metadata","message","getUserMetadata","name","email","style","display","border","textAlign","padding","JSON","stringify","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","clientId","redirectUri","document","getElementById"],"mappings":"4PAWeA,EANK,WAAO,IACjBC,EAAsBC,cAAtBD,kBAER,OAAO,wBAAQE,UAAU,SAASC,QAAS,kBAAMH,KAA1C,qBCQMI,EAVM,WAAO,IAClBC,EAAWJ,cAAXI,OAER,OACE,wBAAQH,UAAU,SAASC,QAAS,kBAAME,EAAO,CAAEC,SAAUC,OAAOC,SAASC,QAA7E,sB,gCC6DWC,EApEC,WAAO,IAAD,EAMhBT,cAJFU,EAFkB,EAElBA,KACAC,EAHkB,EAGlBA,gBACAC,EAJkB,EAIlBA,UACAC,EALkB,EAKlBA,uBALkB,EAOoBC,IAAMC,SAAS,MAPnC,mBAObC,EAPa,KAOCC,EAPD,KA8CpB,OArCAH,IAAMI,WAAU,WAgCVR,GA/BiB,uCAAG,sCAAAS,EAAA,6DAChBC,EAAS,2BADO,kBAIMP,EAAuB,CAC/CQ,SAAS,WAAD,OAAaD,EAAb,YACRE,MAAO,sBANW,cAIdC,EAJc,OAShBjB,OAAOkB,mBACTlB,OAAOkB,mBAAmBC,YAAYF,GAEtCG,QAAQC,IAAI,mCAAoCJ,GAG5CK,EAfc,kBAekBR,EAflB,yBAeyCV,EAAKmB,KAf9C,SAiBWC,MAAMF,EAAoB,CACvDG,QAAS,CACPC,cAAc,UAAD,OAAYT,MAnBT,cAiBdU,EAjBc,iBAuBYA,EAAiBC,OAvB7B,iBAuBZC,EAvBY,EAuBZA,cAERlB,EAAgBkB,GAzBI,kDA2BpBT,QAAQC,IAAI,KAAES,SA3BM,0DAAH,oDAgCnBC,KAED,CAACxB,EAAwBH,IAExBE,EACK,8CAIPD,GACE,gCACE,6BAAKD,EAAK4B,OACV,4BAAI5B,EAAK6B,QACT,oDACCvB,EACC,qBAAKwB,MAAO,CAAEC,QAAS,eAAgBC,OAAQ,iBAAkBC,UAAW,OAAQC,QAAS,IAA7F,SACGC,KAAKC,UAAU9B,EAAc,KAAM,KAGtC,+B,MCxCK+B,MAlBf,WACE,OACE,sBAAK9C,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,uEACA,0EAGF,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAGF,cAAC,EAAD,QCPS+C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,IAAD,CACEvC,OAAO,2BACPwC,SAAS,mCACTC,YAAavD,OAAOC,SAASC,KAC7Ba,SAAS,2CACTC,MAAM,iDALR,SAOE,cAAC,IAAD,UACE,cAAC,EAAD,QATN,OAcAwC,SAASC,eAAe,SAM1Bf,EAAgBtB,QAAQC,O","file":"static/js/main.8ad887f7.chunk.js","sourcesContent":["import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nimport \"./Button.css\";\n\nconst LoginButton = () => {\n  const { loginWithRedirect } = useAuth0();\n\n  return <button className=\"button\" onClick={() => loginWithRedirect()}>Log In</button>;\n};\n\nexport default LoginButton;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nimport \"./Button.css\";\n\n\nconst LogoutButton = () => {\n  const { logout } = useAuth0();\n\n  return (\n    <button className=\"button\" onClick={() => logout({ returnTo: window.location.href })}>\n      Log Out\n    </button>\n  );\n};\n\nexport default LogoutButton;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst Profile = () => {\n  const {\n    user,\n    isAuthenticated,\n    isLoading,\n    getAccessTokenSilently,\n  } = useAuth0();\n  const [userMetadata, setUserMetadata] = React.useState(null);\n\n  React.useEffect(() => {\n    const getUserMetadata = async () => {\n      const domain = \"amwebexpert.us.auth0.com\";\n\n      try {\n        const accessToken = await getAccessTokenSilently({\n          audience: `https://${domain}/api/v2/`,\n          scope: \"read:current_user\",\n        });\n\n        if (window.ReactNativeWebView) {\n          window.ReactNativeWebView.postMessage(accessToken);\n        } else {\n          console.log('ReactNativeWebView not available', accessToken);\n        }\n\n        const userDetailsByIdUrl = `https://${domain}/api/v2/users/${user.sub}`;\n\n        const metadataResponse = await fetch(userDetailsByIdUrl, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`,\n          },\n        });\n\n        const { user_metadata } = await metadataResponse.json();\n\n        setUserMetadata(user_metadata);\n      } catch (e) {\n        console.log(e.message);\n      }\n    };\n\n    if (user) {\n      getUserMetadata();\n    }\n  }, [getAccessTokenSilently, user]);\n\n  if (isLoading) {\n    return <div>Loading ...</div>;\n  }\n\n  return (\n    isAuthenticated && (\n      <div>\n        <h2>{user.name}</h2>\n        <p>{user.email}</p>\n        <strong>User metadata:</strong>\n        {userMetadata ? (\n          <pre style={{ display: 'inline-block', border: '1px solid grey', textAlign: \"left\", padding: 20 }}>\n            {JSON.stringify(userMetadata, null, 2)}\n          </pre>\n        ) : (\n          \"No user metadata defined\"\n        )}\n      </div>\n    )\n  );\n};\n\nexport default Profile;\n","import LoginButton from \"./components/LoginButton\";\nimport LogoutButton from \"./components/LogoutButton\";\nimport Profile from \"./components/Profile\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h2>SPA - React app integrating Auth0 lib</h2>\n        <div>Login and logout through OAuth2 flow</div>\n      </header>\n\n      <div className=\"actions\">\n        <LoginButton />\n        <LogoutButton />\n      </div>\n\n      <Profile />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Auth0Provider\n      domain=\"amwebexpert.us.auth0.com\"\n      clientId=\"ofZTxqmsiHSIu9uLHjlevHRDKObDAhuP\"\n      redirectUri={window.location.href}\n      audience=\"https://amwebexpert.us.auth0.com/api/v2/\"\n      scope=\"read:current_user update:current_user_metadata\"\n    >\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Auth0Provider>\n    ,\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}